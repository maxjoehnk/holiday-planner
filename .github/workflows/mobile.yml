---
on:
  push:
    branches: [main]
  workflow_dispatch:

name: Google Play Store

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  publish-android-beta:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
      - uses: Swatinem/rust-cache@v2
      - uses: actions/cache@v4
        with:
          path: |
            build
            .dart_tool
          key: ${{ runner.os }}-android-${{ hashFiles('pubspec.lock') }}
      - name: Decode keystore
        env:
          ANDROID_KEYSTORE: ${{ secrets.ANDROID_KEYSTORE }}
        run: echo "$ANDROID_KEYSTORE" | base64 -d > keystore.jks
        working-directory: android/app
      - name: Create properties file
        env:
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_SIGNING_KEY_PASSWORD: ${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}
          ANDROID_SIGNING_KEY_ALIAS: ${{ secrets.ANDROID_SIGNING_KEY_ALIAS }}
        run: |
          echo "storePassword=$ANDROID_KEYSTORE_PASSWORD" > key.properties
          echo "keyPassword=$ANDROID_SIGNING_KEY_PASSWORD" >> key.properties
          echo "keyAlias=$ANDROID_SIGNING_KEY_ALIAS" >> key.properties
          echo "storeFile=keystore.jks" >> key.properties
        working-directory: android
      - name: Fetch dependencies
        run: flutter pub get
      # Upload to play store
      - name: Decode service account file
        env:
          SERVICE_ACCOUNT_KEY_JSON: ${{ secrets.SERVICE_ACCOUNT_KEY_JSON }}
        run: echo $SERVICE_ACCOUNT_KEY_JSON | base64 -d > service_account_key.json
        working-directory: android
      - name: Set up ruby env
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.2
          bundler-cache: true
      - name: Deploy
        run: |
          bundle install
          bundle exec fastlane beta
        working-directory: android
