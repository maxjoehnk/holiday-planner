// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../commands/add_tag_to_trip.dart';
import '../commands/create_tag.dart';
import '../commands/remove_tag_from_trip.dart';
import '../commands/set_trip_tags.dart';
import '../commands/update_tag.dart';
import '../frb_generated.dart';
import '../models.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'package:uuid/uuid.dart';

Future<List<TagModel>> getAllTags() =>
    RustLib.instance.api.crateApiTagsGetAllTags();

Future<TagModel?> getTagById({required UuidValue id}) =>
    RustLib.instance.api.crateApiTagsGetTagById(id: id);

Future<TagModel> createTag({required CreateTag command}) =>
    RustLib.instance.api.crateApiTagsCreateTag(command: command);

Future<TagModel> updateTag({required UpdateTag command}) =>
    RustLib.instance.api.crateApiTagsUpdateTag(command: command);

Future<void> deleteTag({required UuidValue id}) =>
    RustLib.instance.api.crateApiTagsDeleteTag(id: id);

Future<List<TagModel>> getTripTags({required UuidValue tripId}) =>
    RustLib.instance.api.crateApiTagsGetTripTags(tripId: tripId);

Future<void> addTagToTrip({required AddTagToTrip command}) =>
    RustLib.instance.api.crateApiTagsAddTagToTrip(command: command);

Future<void> removeTagFromTrip({required RemoveTagFromTrip command}) =>
    RustLib.instance.api.crateApiTagsRemoveTagFromTrip(command: command);

Future<void> setTripTags({required SetTripTags command}) =>
    RustLib.instance.api.crateApiTagsSetTripTags(command: command);
