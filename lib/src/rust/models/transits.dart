// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

class Train {
  final String? trainNumber;
  final TrainStation departure;
  final TrainStation arrival;
  final DateTime scheduledDepartureTime;
  final DateTime scheduledArrivalTime;
  final DateTime? estimatedDepartureTime;
  final DateTime? estimatedArrivalTime;

  const Train({
    this.trainNumber,
    required this.departure,
    required this.arrival,
    required this.scheduledDepartureTime,
    required this.scheduledArrivalTime,
    this.estimatedDepartureTime,
    this.estimatedArrivalTime,
  });

  @override
  int get hashCode =>
      trainNumber.hashCode ^
      departure.hashCode ^
      arrival.hashCode ^
      scheduledDepartureTime.hashCode ^
      scheduledArrivalTime.hashCode ^
      estimatedDepartureTime.hashCode ^
      estimatedArrivalTime.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Train &&
          runtimeType == other.runtimeType &&
          trainNumber == other.trainNumber &&
          departure == other.departure &&
          arrival == other.arrival &&
          scheduledDepartureTime == other.scheduledDepartureTime &&
          scheduledArrivalTime == other.scheduledArrivalTime &&
          estimatedDepartureTime == other.estimatedDepartureTime &&
          estimatedArrivalTime == other.estimatedArrivalTime;
}

class TrainStation {
  final String name;
  final String scheduledPlatform;
  final String? actualPlatform;
  final String? city;
  final String? country;

  const TrainStation({
    required this.name,
    required this.scheduledPlatform,
    this.actualPlatform,
    this.city,
    this.country,
  });

  @override
  int get hashCode =>
      name.hashCode ^
      scheduledPlatform.hashCode ^
      actualPlatform.hashCode ^
      city.hashCode ^
      country.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is TrainStation &&
          runtimeType == other.runtimeType &&
          name == other.name &&
          scheduledPlatform == other.scheduledPlatform &&
          actualPlatform == other.actualPlatform &&
          city == other.city &&
          country == other.country;
}
