// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import '../models.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'package:freezed_annotation/freezed_annotation.dart' hide protected;
import 'package:uuid/uuid.dart';
part 'bookings.freezed.dart';

@freezed
sealed class Booking with _$Booking {
  const Booking._();

  const factory Booking.reservation(
    Reservation field0,
  ) = Booking_Reservation;
  const factory Booking.carRental(
    CarRental field0,
  ) = Booking_CarRental;
}

class CarRental {
  final UuidValue id;
  final String provider;
  final DateTime pickUpDate;
  final String pickUpLocation;
  final DateTime returnDate;
  final String? returnLocation;
  final String? bookingNumber;
  final List<TripAttachment> attachments;

  const CarRental({
    required this.id,
    required this.provider,
    required this.pickUpDate,
    required this.pickUpLocation,
    required this.returnDate,
    this.returnLocation,
    this.bookingNumber,
    required this.attachments,
  });

  @override
  int get hashCode =>
      id.hashCode ^
      provider.hashCode ^
      pickUpDate.hashCode ^
      pickUpLocation.hashCode ^
      returnDate.hashCode ^
      returnLocation.hashCode ^
      bookingNumber.hashCode ^
      attachments.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is CarRental &&
          runtimeType == other.runtimeType &&
          id == other.id &&
          provider == other.provider &&
          pickUpDate == other.pickUpDate &&
          pickUpLocation == other.pickUpLocation &&
          returnDate == other.returnDate &&
          returnLocation == other.returnLocation &&
          bookingNumber == other.bookingNumber &&
          attachments == other.attachments;
}

class Reservation {
  final UuidValue id;
  final String title;
  final String? address;
  final DateTime startDate;
  final DateTime? endDate;
  final String? link;
  final String? bookingNumber;
  final List<TripAttachment> attachments;

  const Reservation({
    required this.id,
    required this.title,
    this.address,
    required this.startDate,
    this.endDate,
    this.link,
    this.bookingNumber,
    required this.attachments,
  });

  @override
  int get hashCode =>
      id.hashCode ^
      title.hashCode ^
      address.hashCode ^
      startDate.hashCode ^
      endDate.hashCode ^
      link.hashCode ^
      bookingNumber.hashCode ^
      attachments.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Reservation &&
          runtimeType == other.runtimeType &&
          id == other.id &&
          title == other.title &&
          address == other.address &&
          startDate == other.startDate &&
          endDate == other.endDate &&
          link == other.link &&
          bookingNumber == other.bookingNumber &&
          attachments == other.attachments;
}
